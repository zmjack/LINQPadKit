<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="ClassName" #>
<#@ output extension=".cs" #>
using LINQPad;
using LINQPadKit.Design;

namespace LINQPadKit;

public partial class <#=ClassName#> : IDump<<#=ClassName#>>
{
    public <#=ClassName#> Dump()
    {
        GetGraphObject().Dump();
        return this;
    }

    public <#=ClassName#> Dump(string? description)
    {
        GetGraphObject().Dump(description);
        return this;
    }

    public <#=ClassName#> Dump(bool toDataGrid, string? description = null)
    {
        GetGraphObject().Dump(toDataGrid, description);
        return this;
    }

    public <#=ClassName#> Dump(int depth, int? collapseTo = null)
    {
        GetGraphObject().Dump(depth, collapseTo);
        return this;
    }

    public <#=ClassName#> Dump(string? description = null, int? depth = null, int? collapseTo = null, bool toDataGrid = false, string? exclude = null, string? include = null, bool? alpha = null, bool noTotals = false, int? repeatHeadersAt = null, bool includePrivate = false)
    {
        GetGraphObject().Dump(description, depth, collapseTo, toDataGrid, exclude, include, alpha, noTotals, repeatHeadersAt, includePrivate);
        return this;
    }

    public <#=ClassName#> Dump(string? description, int? depth, bool toDataGrid, string? exclude = null, bool? alpha = null)
    {
        GetGraphObject().Dump(description, depth, toDataGrid, exclude, alpha);
        return this;
    }

    public <#=ClassName#> Dump(string? description, bool toDataGrid)
    {
        GetGraphObject().Dump(description, toDataGrid);
        return this;
    }

    public <#=ClassName#> DumpTrace()
    {
        GetGraphObject().DumpTrace();
        return this;
    }

    public <#=ClassName#> DumpTrace(string? description)
    {
        GetGraphObject().DumpTrace(description);
        return this;
    }

    public <#=ClassName#> DumpTrace(bool toDataGrid, string? description = null)
    {
        GetGraphObject().DumpTrace(toDataGrid, description);
        return this;
    }

    public <#=ClassName#> DumpTrace(int depth, int? collapseTo = null)
    {
        GetGraphObject().DumpTrace(depth, collapseTo);
        return this;
    }

    public <#=ClassName#> DumpTrace(string? description = null, int? depth = null, int? collapseTo = null, bool toDataGrid = false, string? exclude = null, string? include = null, bool? alpha = null, bool noTotals = false, int? repeatHeadersAt = null, bool includePrivate = false)
    {
        GetGraphObject().DumpTrace(description, depth, collapseTo, toDataGrid, exclude, include, alpha, noTotals, repeatHeadersAt, includePrivate);
        return this;
    }

    public <#=ClassName#> DumpTrace(string? description, bool toDataGrid)
    {
        GetGraphObject().DumpTrace(description, toDataGrid);
        return this;
    }
}
